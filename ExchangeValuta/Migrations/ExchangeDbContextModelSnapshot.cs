// <auto-generated />
using System;
using ExchangeValuta.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExchangeValuta.Migrations
{
    [DbContext(typeof(ExchangeDbContext))]
    partial class ExchangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13");

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Duljina")
                        .HasColumnType("TEXT");

                    b.Property<string>("Himna")
                        .HasColumnType("TEXT");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sirina")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasColumnType("TEXT");

                    b.Property<int>("ValutaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DrzavaId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Drzave");

                    b.HasData(
                        new
                        {
                            DrzavaId = 1,
                            Duljina = "14.778615263851686",
                            Himna = "himne/Croatia.mp3",
                            Naziv = "Hrvatska",
                            Sirina = "45.06463158257005",
                            Slika = "zastave/Croatia.gif",
                            ValutaId = 1
                        },
                        new
                        {
                            DrzavaId = 2,
                            Duljina = "-101.49306883517498",
                            Himna = "himne/U.S.A.mp3",
                            Naziv = "Sjedinjene Američke Države",
                            Sirina = "39.767798747507975",
                            Slika = "zastave/U.S.A.gif",
                            ValutaId = 2
                        },
                        new
                        {
                            DrzavaId = 3,
                            Duljina = "135.96711378068602",
                            Himna = "himne/Australia.mp3",
                            Naziv = "Australija",
                            Sirina = "-24.87274212952918",
                            Slika = "zastave/Australia.gif",
                            ValutaId = 3
                        },
                        new
                        {
                            DrzavaId = 4,
                            Duljina = "17.705870423942812",
                            Himna = "himne/Bosnia-Herzegovina.mp3",
                            Naziv = "Bosna i Hercegovina",
                            Sirina = "44.68520412736344",
                            Slika = "zastave/Bosnia-Herzegovina.gif",
                            ValutaId = 4
                        },
                        new
                        {
                            DrzavaId = 5,
                            Duljina = "-103.08745109521944",
                            Himna = "himne/Canada.mp3",
                            Naziv = "Kanada",
                            Sirina = "57.72584859006902",
                            Slika = "zastave/Canada.gif",
                            ValutaId = 5
                        },
                        new
                        {
                            DrzavaId = 6,
                            Duljina = "103.481279254587",
                            Himna = "himne/China.mp3",
                            Naziv = "Kina",
                            Sirina = "34.56402185615146",
                            Slika = "zastave/China.gif",
                            ValutaId = 6
                        },
                        new
                        {
                            DrzavaId = 7,
                            Duljina = "10.025547865453749",
                            Himna = "himne/Denmark.mp3",
                            Naziv = "Danska",
                            Sirina = "55.618736707420844",
                            Slika = "zastave/Denmark.gif",
                            ValutaId = 7
                        },
                        new
                        {
                            DrzavaId = 8,
                            Duljina = "26.144040963705947",
                            Himna = "himne/Finland.mp3",
                            Naziv = "Finska",
                            Sirina = "62.06224345303571",
                            Slika = "zastave/Finland.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 9,
                            Duljina = "2.0912470815043243",
                            Himna = "himne/France.mp3",
                            Naziv = "Francuska",
                            Sirina = "46.57123870171129",
                            Slika = "zastave/France.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 10,
                            Duljina = "10.47342096199992",
                            Himna = "himne/Germany.mp3",
                            Naziv = "Njemačka",
                            Sirina = "51.0761551229671",
                            Slika = "zastave/Germany.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 11,
                            Duljina = "19.619304268136375",
                            Himna = "himne/Hungary.mp3",
                            Naziv = "Mađarska",
                            Sirina = "47.01648894445974",
                            Slika = "zastave/Hungary.gif",
                            ValutaId = 9
                        },
                        new
                        {
                            DrzavaId = 12,
                            Duljina = "-18.6527951194541",
                            Himna = "himne/Iceland.mp3",
                            Naziv = "Island",
                            Sirina = "64.97394651610523",
                            Slika = "zastave/Iceland.gif",
                            ValutaId = 10
                        },
                        new
                        {
                            DrzavaId = 13,
                            Duljina = "79.79321444322021",
                            Himna = "himne/India.mp3",
                            Naziv = "Indija",
                            Sirina = "23.114709736909592",
                            Slika = "zastave/India.gif",
                            ValutaId = 11
                        },
                        new
                        {
                            DrzavaId = 14,
                            Duljina = "54.26737475215082",
                            Himna = "himne/Iran.mp3",
                            Naziv = "Iran",
                            Sirina = "32.04739977502531",
                            Slika = "zastave/Iran.gif",
                            ValutaId = 12
                        },
                        new
                        {
                            DrzavaId = 15,
                            Duljina = "34.80662706394255",
                            Himna = "himne/Israel.mp3",
                            Naziv = "Izrael",
                            Sirina = "30.97374273492748",
                            Slika = "zastave/Israel.gif",
                            ValutaId = 13
                        },
                        new
                        {
                            DrzavaId = 16,
                            Duljina = "12.793975984255507",
                            Himna = "himne/Italy.mp3",
                            Naziv = "Italija",
                            Sirina = "43.0128410718408",
                            Slika = "zastave/Italy.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 17,
                            Duljina = "138.4659546493385",
                            Himna = "himne/Japan.mp3",
                            Naziv = "Japan",
                            Sirina = "36.554300448993104",
                            Slika = "zastave/Japan.gif",
                            ValutaId = 14
                        },
                        new
                        {
                            DrzavaId = 18,
                            Duljina = "21.70369910426241",
                            Himna = "himne/Macedonia.mp3",
                            Naziv = "Makedonija",
                            Sirina = "41.63867650987654",
                            Slika = "zastave/Macedonia.gif",
                            ValutaId = 15
                        },
                        new
                        {
                            DrzavaId = 19,
                            Duljina = "-102.76330017415548",
                            Himna = "himne/Mexico.mp3",
                            Naziv = "Meksiko",
                            Sirina = "23.898167246697277",
                            Slika = "zastave/Mexico.gif",
                            ValutaId = 16
                        },
                        new
                        {
                            DrzavaId = 20,
                            Duljina = "172.48203443267067",
                            Himna = "himne/New Zealand.mp3",
                            Naziv = "Novi Zeland",
                            Sirina = "-42.45944241636766",
                            Slika = "zastave/New Zealand.gif",
                            ValutaId = 17
                        },
                        new
                        {
                            DrzavaId = 21,
                            Duljina = "122.85021786638886",
                            Himna = "himne/Philippines.mp3",
                            Naziv = "Filipini",
                            Sirina = "12.522248374750388",
                            Slika = "zastave/Philippines.gif",
                            ValutaId = 18
                        },
                        new
                        {
                            DrzavaId = 22,
                            Duljina = "18.540027025821185",
                            Himna = "himne/Poland.mp3",
                            Naziv = "Poljska",
                            Sirina = "52.89071506172981",
                            Slika = "zastave/Poland.gif",
                            ValutaId = 19
                        },
                        new
                        {
                            DrzavaId = 23,
                            Duljina = "51.19014508916761",
                            Himna = "himne/Qatar.mp3",
                            Naziv = "Katar",
                            Sirina = "25.313258207010662",
                            Slika = "zastave/Qatar.gif",
                            ValutaId = 20
                        },
                        new
                        {
                            DrzavaId = 24,
                            Duljina = "93.42813450212664",
                            Himna = "himne/Russia.mp3",
                            Naziv = "Rusija",
                            Sirina = "62.20846329274161",
                            Slika = "zastave/Russia.gif",
                            ValutaId = 21
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lozinka")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prezime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4cdcabce-6d9c-4ab9-9984-57bc74bbdfcd",
                            EmailConfirmed = true,
                            Ime = "Administrator",
                            LockoutEnabled = true,
                            Lozinka = "admin",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEH2F8W9+jFK/o+JHWLT9S9A+Q8T8GsuG3GFf5LOlJ7+dRL+bNak5Edqn6vLsUkcSjw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Administrator",
                            SecurityStamp = "c00391d5-683d-423a-8028-bd99482f37fe",
                            Slika = "korisnici/admin.jpg",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4fac43c6-871a-4888-b899-2bcbf96b650f",
                            EmailConfirmed = true,
                            Ime = "Voditelj",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "VODITELJ",
                            PasswordHash = "AQAAAAEAACcQAAAAEAaz/cCaQbqgdfJg9S5Ij00qvISSudVOck5LSO0qeVXyliM9r27vwKSxtlUPGK6q6A==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Voditelj",
                            SecurityStamp = "a3c193f5-6d8a-4f68-bac9-bff8505a654f",
                            Slika = "korisnici/admin.jpg",
                            TwoFactorEnabled = false,
                            UserName = "voditelj"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c15d4ad1-2f9d-4812-9a69-27afeb81a95a",
                            Email = "kdunst@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Kirsten",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "KDUNST",
                            PasswordHash = "AQAAAAEAACcQAAAAEO+Iu0jBBV0NqnN1PvorOJXnlCdw2uOtZx9FV//QCyzJDWb5t/JhNnDJqJojb9DqSA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Dunst",
                            SecurityStamp = "6993854a-ad12-481d-9e87-258dd05df93e",
                            Slika = "korisnici/kdunst.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kdunst"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f21cc1cc-f7a2-4fc9-8be9-404c9a1569aa",
                            Email = "thanks@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Tom",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "THANKS",
                            PasswordHash = "AQAAAAEAACcQAAAAEJlyGUjtBZqYKSRNoDiBUazKBUZFPthNsDiXTzZTKrbZ52bs8Hr99AcabJkl23l8fg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Hanks",
                            SecurityStamp = "5d643794-58b0-4b3c-84f2-384278a6b80d",
                            Slika = "korisnici/thanks.jpg",
                            TwoFactorEnabled = false,
                            UserName = "thanks"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6fb84e55-e954-4e73-b832-2692f0af10b7",
                            Email = "jalba@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Jessica",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "JALBA",
                            PasswordHash = "AQAAAAEAACcQAAAAEP3i2kJHR+elBFUDhWzPE9QOOt+g2zCWbtGAJlD43OMlgQd4EupkELyv9QLL/4LZjQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Alba",
                            SecurityStamp = "1d7ac187-00ba-4d80-b2c0-d7cc0a81c210",
                            Slika = "korisnici/jalba.jpg",
                            TwoFactorEnabled = false,
                            UserName = "jalba"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "53d7ef95-ad38-4680-ba4d-dcad9ab1ca50",
                            Email = "pkos@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Pero",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "PKOS",
                            PasswordHash = "AQAAAAEAACcQAAAAEIUtAsCvZiqMK9VLj5RRFEFllNiXw1WumiNeQQ8Ukcr/yMRTUu/iwkQ5yrWhB04h3A==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Kos",
                            SecurityStamp = "990aa5fd-e212-43c7-a2bd-33a35984b0ab",
                            Slika = "korisnici/pkos.jpg",
                            TwoFactorEnabled = false,
                            UserName = "pkos"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a7d5cd2-cebb-4411-95c9-a142ba9c2e9e",
                            Email = "vzec@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Vladimir",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "VZEC",
                            PasswordHash = "AQAAAAEAACcQAAAAEEpA3qvi4LYkpoyZE+4afrAB64hKefqzM/rAxatJc59iwLYvip80B/i0JpAaS87XGQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Zec",
                            SecurityStamp = "0cf8d538-89f8-46ad-a272-48b2a5ec4bf1",
                            Slika = "korisnici/vzec.jpg",
                            TwoFactorEnabled = false,
                            UserName = "vzec"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "af9434ea-4540-428a-b279-03b896ce7887",
                            Email = "qtarantino@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Quentin",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "QTARANTINO",
                            PasswordHash = "AQAAAAEAACcQAAAAEPRZtnfSTID6UyY4w4Uk8Q2fpgBRygbl2BgZKGIEq35tbtoHHoQVBZpldn7PB5hq1Q==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Tarantino",
                            SecurityStamp = "4e4470f9-3791-434f-b9d8-01b91ef03878",
                            Slika = "korisnici/qtarantino.jpg",
                            TwoFactorEnabled = false,
                            UserName = "qtarantino"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5c584607-332d-445b-b499-bcb94bad71d1",
                            Email = "mbellucci@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Monica",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "MBELLUCCI",
                            PasswordHash = "AQAAAAEAACcQAAAAEFCHec/Z+J5cR/upmR9rmy23e5QCYfV7lMOGdATxSDPIh1olejv84mzir+dDmxycjw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Bellucci",
                            SecurityStamp = "e7dbda5c-328b-459c-85c1-a4254f67b113",
                            Slika = "korisnici/mbellucci.jpg",
                            TwoFactorEnabled = false,
                            UserName = "mbellucci"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "66e6020c-ee15-44b2-9a14-37a7521724ba",
                            Email = "vmortensen@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Viggo",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "VMORTENSEN",
                            PasswordHash = "AQAAAAEAACcQAAAAEGeIb6NtFEf8D5tsNukTZtBXtqTqit9HvIAQ52w6VKE82Vulf8hNXinP1t02TT/4mQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Mortensen",
                            SecurityStamp = "9ff3f0b5-b113-4269-9eb6-d5d9b51f7de7",
                            Slika = "korisnici/vmortensen.jpg",
                            TwoFactorEnabled = false,
                            UserName = "vmortensen"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02278a44-7823-4f6a-bdfa-96046e7c71ea",
                            Email = "jgarner@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Jennifer",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "JGARNER",
                            PasswordHash = "AQAAAAEAACcQAAAAEErBSwj3WBiuEotvsjNnlNJBUZJ+JbX1zM7MizIzn47lIFb/Pp7uTa1jAjBjS84Jaw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Garner",
                            SecurityStamp = "77fb6faf-7e6a-4695-9c30-9739033ccde9",
                            Slika = "korisnici/jgarner.jpg",
                            TwoFactorEnabled = false,
                            UserName = "jgarner"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b1105b77-d4b2-46e7-ad57-6884c2ca9371",
                            Email = "nportman@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Natalie",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "NPORTMAN",
                            PasswordHash = "AQAAAAEAACcQAAAAEPWLziSkdCogQk3MR3SmUPEwP2+z+s5+RvLXZo4XZxJrrnLxMXTdiX8nhSYAcJN4qQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Portman",
                            SecurityStamp = "56da47b5-0002-4a72-994d-b477e2c3478d",
                            Slika = "korisnici/nportman.jpg",
                            TwoFactorEnabled = false,
                            UserName = "nportman"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a4c536b0-25b0-4407-903b-7becf9f36347",
                            Email = "dradcliffe@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Daniel",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "DRADCLIFFE",
                            PasswordHash = "AQAAAAEAACcQAAAAEH+0ZTFJMKCxLOvpyXGq3GoZSbL8OBcydpKqL5h+0JNyG3ppBYjWYCUutTn+IcX0Fg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Radcliffe",
                            SecurityStamp = "c720238e-5952-41fe-bfc6-a3308a378773",
                            Slika = "korisnici/dradcliffe.jpg",
                            TwoFactorEnabled = false,
                            UserName = "dradcliffe"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c278818f-0535-47f9-8562-c9c072251bc1",
                            Email = "hberry@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Halle",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "HBERRY",
                            PasswordHash = "AQAAAAEAACcQAAAAEDGaBAhU7HoN6I1OUX472t4oqaTSuf3JL7SEVUbYZ0hRVfwGJDJsQLUOVaBmk1gO5A==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Berry",
                            SecurityStamp = "cd756ac6-a91c-485c-abd2-fcd687b50158",
                            Slika = "korisnici/hberry.jpg",
                            TwoFactorEnabled = false,
                            UserName = "hberry"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9fd531d2-796f-45d4-8f6a-f816f19fa54b",
                            Email = "vdiesel@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Vin",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "VDIESEL",
                            PasswordHash = "AQAAAAEAACcQAAAAEMfccAAGSYMRQTSaz88ovFvN+vhqGv7XZ8aHXR2p2E6v8QbsghO2ZzGcRFiv0sBMRA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Diesel",
                            SecurityStamp = "f4d60dff-e50d-46e9-8e67-aadb929bfc2f",
                            Slika = "korisnici/vdiesel.jpg",
                            TwoFactorEnabled = false,
                            UserName = "vdiesel"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1f1304b3-4b0c-4617-899d-7325d67b7342",
                            Email = "ecuthbert@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Elisha",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "ECUTHBERT",
                            PasswordHash = "AQAAAAEAACcQAAAAEH9ZUrN6z2RLJ4ycKHj2nrXHQfFSmAAZOsFJCJVzNRSn1ckIXko12eAKMe2anE2+2Q==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Cuthbert",
                            SecurityStamp = "860dd5ef-4d80-4dd7-8f4f-9f56f0eb1458",
                            Slika = "korisnici/ecuthbert.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ecuthbert"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04aa22ce-c806-4e11-a02d-236c514803c5",
                            Email = "janiston@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Jennifer",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "JANISTON",
                            PasswordHash = "AQAAAAEAACcQAAAAELepcdOzOJ1lroAWDNNvCKLvoC2X4NwIZzCbESiPjyjQml1hR58afzSmvnmpiD53OQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Aniston",
                            SecurityStamp = "70090f97-6437-4c88-9654-825443076936",
                            Slika = "korisnici/janiston.jpg",
                            TwoFactorEnabled = false,
                            UserName = "janiston"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "76b3a4bc-cb1b-4b62-af89-7a0b7eacae25",
                            Email = "ctheron@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Charlize",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "CTHERON",
                            PasswordHash = "AQAAAAEAACcQAAAAEOApeLR3dthV2yH7HQwwzdrIJWFGTneB22onQTluk3MO/jTqCAtmhkYRWJbjYnBvtA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Theron",
                            SecurityStamp = "dc5c05ff-04bc-41e1-9cf8-dd8a1bd753ca",
                            Slika = "korisnici/ctheron.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ctheron"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d2b27c09-b279-45c9-a322-4e37e6798b94",
                            Email = "nkidman@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Nicole",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "NKIDMAN",
                            PasswordHash = "AQAAAAEAACcQAAAAENuw3D6UVHVu4nBn+TxVas8S/x/lmmAR1vVM7jXi1YI8KkWlyIN5m6KILmFkLk2lPw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Kidman",
                            SecurityStamp = "fe0430e0-3313-4b0e-ab09-48e7b30c76e2",
                            Slika = "korisnici/nkidman.jpg",
                            TwoFactorEnabled = false,
                            UserName = "nkidman"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ad89698f-f701-41a1-8678-46c466f31b3e",
                            Email = "ewatson@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Emma",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "EWATSON",
                            PasswordHash = "AQAAAAEAACcQAAAAELNYewtWjE91JubBP+WAx6BW/8/QeNWJ95P+cSdBbhydk1GtT/SNsnbehhYNZqDHjA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Watson",
                            SecurityStamp = "d30556b3-4997-416b-85d3-8f8b406289de",
                            Slika = "korisnici/ewatson.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ewatson"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "37737885-6222-46c7-9d32-6ed41757f2d2",
                            Email = "sjohansson@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Scarlett",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "SJOHANSSON",
                            PasswordHash = "AQAAAAEAACcQAAAAEIyqwQ/pu0Cp7+ZSM5IqstK8c22Jvsqs0/qk+XEdvKoicge0Jago3WRa567/PZGDDQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Johansson",
                            SecurityStamp = "466accf5-1824-482f-8e3c-758472e2d5f6",
                            Slika = "korisnici/sjohansson.jpg",
                            TwoFactorEnabled = false,
                            UserName = "sjohansson"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2d6c2aaf-ee8c-4995-8952-926028fa15d4",
                            Email = "philton@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Paris",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "PHILTON",
                            PasswordHash = "AQAAAAEAACcQAAAAEGHk8YDLTV4YnC0Zd7XCgfJKrZ82176GGcKFeaRDyGfXsd6630Hbd4Zdae1klUlmgw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Hilton",
                            SecurityStamp = "cf4c63f5-cea0-46c3-b7ab-11e23efa6e51",
                            Slika = "korisnici/philton.jpg",
                            TwoFactorEnabled = false,
                            UserName = "philton"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3bb44daa-ce7a-41c8-a2d3-72018237180c",
                            Email = "kbeckinsale@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Kate",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "KBECKINSALE",
                            PasswordHash = "AQAAAAEAACcQAAAAEPQNyRZefVD5XkBI6W+fiI/MBHPqNi8xlfNXzWeF41ESiEAN3ZGkGGaiWgRgN//GLQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Beckinsale",
                            SecurityStamp = "9646025e-f3fe-4c1c-9ceb-f5411bedfdb9",
                            Slika = "korisnici/kbeckinsale.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kbeckinsale"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e956fcda-1784-4168-9810-e0bcdb4a6d23",
                            Email = "tcruise@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Tom",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "TCRUISE",
                            PasswordHash = "AQAAAAEAACcQAAAAEOo7WXQkS8GB+mzCdoJFaQOEFnH3GWpnsBtqkzbhfMDWQIA/JVKf7tPLS779bQif/Q==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Cruise",
                            SecurityStamp = "67ca3872-9dd0-444b-bba4-7677f2d6ae3b",
                            Slika = "korisnici/tcruise.jpg",
                            TwoFactorEnabled = false,
                            UserName = "tcruise"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8cfba6ff-c5b2-4a03-8f42-c106cbc81ad7",
                            Email = "hduff@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Hilary",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "HDUFF",
                            PasswordHash = "AQAAAAEAACcQAAAAECyVC4jWEEmrjvFPH8BD5iKV/anneYT8WRosPPh849gDRkQ/k1jY7VqNYiFpAWbRow==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Duff",
                            SecurityStamp = "01ff58af-5afd-4c4e-8c79-432d32b98554",
                            Slika = "korisnici/hduff.jpg",
                            TwoFactorEnabled = false,
                            UserName = "hduff"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "48d33784-6519-4928-ac38-90a55c691dd6",
                            Email = "ajolie@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Angelina",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "AJOLIE",
                            PasswordHash = "AQAAAAEAACcQAAAAEByjwVD/DR2grCY00CXmjxhlZUMyqXXhbOfr3biBGF1/EAI3UPw8SstnqLxTGI7dPQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Jolie",
                            SecurityStamp = "2523f3cf-b1f1-4ea7-9da4-d1a2d36e1276",
                            Slika = "korisnici/ajolie.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ajolie"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "91cd700e-388b-4ec3-96d5-71ce79ce8760",
                            Email = "kknightley@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Keira",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "KKNIGHTLEY",
                            PasswordHash = "AQAAAAEAACcQAAAAEP2q8GdghUIMfZRLIgeRo26r+HJSAyNXFMJmieNQKwQR2c+83mgA10MCIybVkjODOg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Knightley",
                            SecurityStamp = "bfb6b7a8-5514-485a-9e77-18c70fad2859",
                            Slika = "korisnici/kknightley.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kknightley"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "27842b2f-3181-4d8f-8394-8c7a458384f1",
                            Email = "obloom@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Orlando",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "OBLOOM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOggEzbquvMVOrSdNMxEwstJwDlSFLjd8BWYdypCA+wLwKBQV0Pp5FfeBlYCQGby7w==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Bloom",
                            SecurityStamp = "a922b59a-fdcf-45bd-b083-31075811d371",
                            Slika = "korisnici/obloom.jpg",
                            TwoFactorEnabled = false,
                            UserName = "obloom"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f4337d6c-37e1-4b4e-881f-939913fc44ae",
                            Email = "llohan@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Lindsay",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "LLOHAN",
                            PasswordHash = "AQAAAAEAACcQAAAAEFZBdI4+ovpD5B0zPH+DIp2uJuY3O92tp1FYZTncklRtkvP5PO6SCKg/EWB9voTmLg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Lohan",
                            SecurityStamp = "27c6b724-686b-409f-a625-bc91fcacaea1",
                            Slika = "korisnici/llohan.jpg",
                            TwoFactorEnabled = false,
                            UserName = "llohan"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "657c1740-5b86-4da6-b357-3c733a98f211",
                            Email = "jdepp@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Johnny",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "JDEPP",
                            PasswordHash = "AQAAAAEAACcQAAAAEFpReo9mHR+nxCPKBPgEVyQwgucGgTWXJKvgzuHz/Q0l/qj+cR4Msf8422rJN8SYOg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Depp",
                            SecurityStamp = "5a4d8261-318a-43bb-b4ea-064b44ef106a",
                            Slika = "korisnici/jdepp.jpg",
                            TwoFactorEnabled = false,
                            UserName = "jdepp"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "967c02f9-81f2-4dcf-9be9-e581b2f45bc1",
                            Email = "kreeves@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Keanu",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            NormalizedUserName = "KREVEES",
                            PasswordHash = "AQAAAAEAACcQAAAAEOLkQbIN0WOuuoOA2Z2ZNAj4Ncx9XCmqED/AErnmjvGwdmInlOOpI3oUbgYw+sTFdQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Reeves",
                            SecurityStamp = "ce4e4f9c-71d7-419a-b51c-c9e0559c32ad",
                            Slika = "korisnici/kreeves.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kreeves"
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "e38ab0c8-4a10-4ed5-9554-c4027216b654",
                            Name = "administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "f71b2253-bc8e-408a-b031-84875becb9dc",
                            Name = "moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "df018059-5b02-46f4-a756-585e82ac01e4",
                            Name = "korisnik",
                            NormalizedName = "KORISNIK"
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Sredstva", b =>
                {
                    b.Property<int>("SredstvaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Iznos")
                        .HasColumnType("REAL");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValutaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SredstvaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Sredstva");

                    b.HasData(
                        new
                        {
                            SredstvaId = 1,
                            Iznos = 100.0,
                            KorisnikId = 1,
                            ValutaId = 1
                        },
                        new
                        {
                            SredstvaId = 2,
                            Iznos = 150.0,
                            KorisnikId = 1,
                            ValutaId = 5
                        },
                        new
                        {
                            SredstvaId = 3,
                            Iznos = 1000.0,
                            KorisnikId = 1,
                            ValutaId = 8
                        },
                        new
                        {
                            SredstvaId = 4,
                            Iznos = 175.0,
                            KorisnikId = 5,
                            ValutaId = 7
                        },
                        new
                        {
                            SredstvaId = 5,
                            Iznos = 10000.0,
                            KorisnikId = 2,
                            ValutaId = 10
                        },
                        new
                        {
                            SredstvaId = 6,
                            Iznos = 1000000.0,
                            KorisnikId = 11,
                            ValutaId = 6
                        },
                        new
                        {
                            SredstvaId = 7,
                            Iznos = 12345678.0,
                            KorisnikId = 3,
                            ValutaId = 4
                        },
                        new
                        {
                            SredstvaId = 8,
                            Iznos = 80000.0,
                            KorisnikId = 13,
                            ValutaId = 8
                        },
                        new
                        {
                            SredstvaId = 9,
                            Iznos = 100000.0,
                            KorisnikId = 19,
                            ValutaId = 2
                        },
                        new
                        {
                            SredstvaId = 10,
                            Iznos = 100.0,
                            KorisnikId = 11,
                            ValutaId = 7
                        },
                        new
                        {
                            SredstvaId = 11,
                            Iznos = 100.0,
                            KorisnikId = 5,
                            ValutaId = 11
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Valuta", b =>
                {
                    b.Property<int>("ValutaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("AktivnoDo")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("AktivnoOd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumAzuriranja")
                        .HasColumnType("TEXT");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.Property<string>("SlikaValute")
                        .HasColumnType("TEXT");

                    b.Property<double>("Tecaj")
                        .HasColumnType("REAL");

                    b.HasKey("ValutaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Valute");

                    b.HasData(
                        new
                        {
                            ValutaId = 1,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "HRK",
                            SlikaValute = "valute/",
                            Tecaj = 1.0
                        },
                        new
                        {
                            ValutaId = 2,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "USD",
                            SlikaValute = "valute/dolar.jpg",
                            Tecaj = 0.15809999999999999
                        },
                        new
                        {
                            ValutaId = 3,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "AUD",
                            SlikaValute = "valute/australskidolar.jpg",
                            Tecaj = 0.20660000000000001
                        },
                        new
                        {
                            ValutaId = 4,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "BAM",
                            SlikaValute = "valute/bam.gif",
                            Tecaj = 0.2596
                        },
                        new
                        {
                            ValutaId = 5,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "CAD",
                            SlikaValute = "valute/cad.jpg",
                            Tecaj = 0.19869999999999999
                        },
                        new
                        {
                            ValutaId = 6,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "CNY",
                            SlikaValute = "valute/cny.jpg",
                            Tecaj = 1.0338000000000001
                        },
                        new
                        {
                            ValutaId = 7,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "DKK",
                            SlikaValute = "valute/dkk.jpg",
                            Tecaj = 0.99019999999999997
                        },
                        new
                        {
                            ValutaId = 8,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "EUR",
                            SlikaValute = "valute/EUR.jpg",
                            Tecaj = 0.13270000000000001
                        },
                        new
                        {
                            ValutaId = 9,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "HUF",
                            SlikaValute = "valute/huf.jpg",
                            Tecaj = 47.744599999999998
                        },
                        new
                        {
                            ValutaId = 10,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "ISK",
                            SlikaValute = "valute/isk.jpg",
                            Tecaj = 20.005800000000001
                        },
                        new
                        {
                            ValutaId = 11,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "INR",
                            SlikaValute = "valute/inr.jpg",
                            Tecaj = 11.758599999999999
                        },
                        new
                        {
                            ValutaId = 12,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "IRR",
                            SlikaValute = "valute/irr.jpg",
                            Tecaj = 6602.1956
                        },
                        new
                        {
                            ValutaId = 13,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "ILS",
                            SlikaValute = "valute/ils.jpg",
                            Tecaj = 0.52090000000000003
                        },
                        new
                        {
                            ValutaId = 14,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "JPY",
                            SlikaValute = "valute/jpy.jpg",
                            Tecaj = 17.270399999999999
                        },
                        new
                        {
                            ValutaId = 15,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "MKD",
                            SlikaValute = "valute/mkd.jpg",
                            Tecaj = 8.1780000000000008
                        },
                        new
                        {
                            ValutaId = 16,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "MXN",
                            SlikaValute = "valute/mxn.jpg",
                            Tecaj = 3.1829000000000001
                        },
                        new
                        {
                            ValutaId = 17,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "NZD",
                            SlikaValute = "valute/nzd.jpg",
                            Tecaj = 0.22409999999999999
                        },
                        new
                        {
                            ValutaId = 18,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "PHP",
                            SlikaValute = "valute/php.jpg",
                            Tecaj = 7.6715999999999998
                        },
                        new
                        {
                            ValutaId = 19,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "PLN",
                            SlikaValute = "valute/pln.jpg",
                            Tecaj = 0.60489999999999999
                        },
                        new
                        {
                            ValutaId = 20,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "QAR",
                            SlikaValute = "valute/qar.jpg",
                            Tecaj = 0.57550000000000001
                        },
                        new
                        {
                            ValutaId = 21,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "RUB",
                            SlikaValute = "valute/rub.jpg",
                            Tecaj = 12.1433
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Zahtjev", b =>
                {
                    b.Property<int>("ZahtjevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatumVrijemeKreiranja")
                        .HasColumnType("TEXT");

                    b.Property<double>("Iznos")
                        .HasColumnType("REAL");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KupujemValutaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Prihvacen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdajemValutaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ValutaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZahtjevId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Zahtjevi");

                    b.HasData(
                        new
                        {
                            ZahtjevId = 1,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 20, 9, 27, 8, 269, DateTimeKind.Local).AddTicks(8672),
                            Iznos = 100.0,
                            KorisnikId = 6,
                            KupujemValutaId = 1,
                            Prihvacen = 2,
                            ProdajemValutaId = 8
                        },
                        new
                        {
                            ZahtjevId = 2,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 20, 9, 27, 8, 273, DateTimeKind.Local).AddTicks(4357),
                            Iznos = 4500.0,
                            KorisnikId = 8,
                            KupujemValutaId = 8,
                            Prihvacen = 2,
                            ProdajemValutaId = 1
                        },
                        new
                        {
                            ZahtjevId = 3,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 20, 9, 27, 8, 273, DateTimeKind.Local).AddTicks(4415),
                            Iznos = 1500.0,
                            KorisnikId = 7,
                            KupujemValutaId = 11,
                            Prihvacen = 2,
                            ProdajemValutaId = 4
                        },
                        new
                        {
                            ZahtjevId = 4,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 20, 9, 27, 8, 273, DateTimeKind.Local).AddTicks(4421),
                            Iznos = 10000.0,
                            KorisnikId = 10,
                            KupujemValutaId = 7,
                            Prihvacen = 2,
                            ProdajemValutaId = 2
                        },
                        new
                        {
                            ZahtjevId = 5,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 20, 9, 27, 8, 273, DateTimeKind.Local).AddTicks(4425),
                            Iznos = 1800.0,
                            KorisnikId = 4,
                            KupujemValutaId = 9,
                            Prihvacen = 1,
                            ProdajemValutaId = 8
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Drzava", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Valuta", "Valuta")
                        .WithMany("Drzave")
                        .HasForeignKey("ValutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Sredstva", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("Sredstva")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExchangeValuta.Domain.Models.Valuta", "Valuta")
                        .WithMany("Sredstva")
                        .HasForeignKey("ValutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.UserRole", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Valuta", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("Valute")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Zahtjev", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExchangeValuta.Domain.Models.Valuta", "Valuta")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("ValutaId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
