// <auto-generated />
using System;
using ExchangeValuta.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExchangeValuta.Migrations
{
    [DbContext(typeof(ExchangeDbContext))]
    [Migration("20210416111902_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13");

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Duljina")
                        .HasColumnType("TEXT");

                    b.Property<string>("Himna")
                        .HasColumnType("TEXT");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sirina")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasColumnType("TEXT");

                    b.Property<int>("ValutaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DrzavaId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Drzave");

                    b.HasData(
                        new
                        {
                            DrzavaId = 1,
                            Duljina = "14.778615263851686",
                            Himna = "himne/Croatia.mp3",
                            Naziv = "Hrvatska",
                            Sirina = "45.06463158257005",
                            Slika = "zastave/Croatia.gif",
                            ValutaId = 1
                        },
                        new
                        {
                            DrzavaId = 2,
                            Duljina = "-101.49306883517498",
                            Himna = "himne/U.S.A.mp3",
                            Naziv = "Sjedinjene Američke Države",
                            Sirina = "39.767798747507975",
                            Slika = "zastave/U.S.A.gif",
                            ValutaId = 2
                        },
                        new
                        {
                            DrzavaId = 3,
                            Duljina = "135.96711378068602",
                            Himna = "himne/Australia.mp3",
                            Naziv = "Australija",
                            Sirina = "-24.87274212952918",
                            Slika = "zastave/Australia.gif",
                            ValutaId = 3
                        },
                        new
                        {
                            DrzavaId = 4,
                            Duljina = "17.705870423942812",
                            Himna = "himne/Bosnia-Herzegovina.mp3",
                            Naziv = "Bosna i Hercegovina",
                            Sirina = "44.68520412736344",
                            Slika = "zastave/Bosnia-Herzegovina.gif",
                            ValutaId = 4
                        },
                        new
                        {
                            DrzavaId = 5,
                            Duljina = "-103.08745109521944",
                            Himna = "himne/Canada.mp3",
                            Naziv = "Kanada",
                            Sirina = "57.72584859006902",
                            Slika = "zastave/Canada.gif",
                            ValutaId = 5
                        },
                        new
                        {
                            DrzavaId = 6,
                            Duljina = "103.481279254587",
                            Himna = "himne/China.mp3",
                            Naziv = "Kina",
                            Sirina = "34.56402185615146",
                            Slika = "zastave/China.gif",
                            ValutaId = 6
                        },
                        new
                        {
                            DrzavaId = 7,
                            Duljina = "10.025547865453749",
                            Himna = "himne/Denmark.mp3",
                            Naziv = "Danska",
                            Sirina = "55.618736707420844",
                            Slika = "zastave/Denmark.gif",
                            ValutaId = 7
                        },
                        new
                        {
                            DrzavaId = 8,
                            Duljina = "26.144040963705947",
                            Himna = "himne/Finland.mp3",
                            Naziv = "Finska",
                            Sirina = "62.06224345303571",
                            Slika = "zastave/Finland.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 9,
                            Duljina = "2.0912470815043243",
                            Himna = "himne/France.mp3",
                            Naziv = "Francuska",
                            Sirina = "46.57123870171129",
                            Slika = "zastave/France.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 10,
                            Duljina = "10.47342096199992",
                            Himna = "himne/Germany.mp3",
                            Naziv = "Njemačka",
                            Sirina = "51.0761551229671",
                            Slika = "zastave/Germany.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 11,
                            Duljina = "19.619304268136375",
                            Himna = "himne/Hungary.mp3",
                            Naziv = "Mađarska",
                            Sirina = "47.01648894445974",
                            Slika = "zastave/Hungary.gif",
                            ValutaId = 9
                        },
                        new
                        {
                            DrzavaId = 12,
                            Duljina = "-18.6527951194541",
                            Himna = "himne/Iceland.mp3",
                            Naziv = "Island",
                            Sirina = "64.97394651610523",
                            Slika = "zastave/Iceland.gif",
                            ValutaId = 10
                        },
                        new
                        {
                            DrzavaId = 13,
                            Duljina = "79.79321444322021",
                            Himna = "himne/India.mp3",
                            Naziv = "Indija",
                            Sirina = "23.114709736909592",
                            Slika = "zastave/India.gif",
                            ValutaId = 11
                        },
                        new
                        {
                            DrzavaId = 14,
                            Duljina = "54.26737475215082",
                            Himna = "himne/Iran.mp3",
                            Naziv = "Iran",
                            Sirina = "32.04739977502531",
                            Slika = "zastave/Iran.gif",
                            ValutaId = 12
                        },
                        new
                        {
                            DrzavaId = 15,
                            Duljina = "34.80662706394255",
                            Himna = "himne/Israel.mp3",
                            Naziv = "Izrael",
                            Sirina = "30.97374273492748",
                            Slika = "zastave/Israel.gif",
                            ValutaId = 13
                        },
                        new
                        {
                            DrzavaId = 16,
                            Duljina = "12.793975984255507",
                            Himna = "himne/Italy.mp3",
                            Naziv = "Italija",
                            Sirina = "43.0128410718408",
                            Slika = "zastave/Italy.gif",
                            ValutaId = 8
                        },
                        new
                        {
                            DrzavaId = 17,
                            Duljina = "138.4659546493385",
                            Himna = "himne/Japan.mp3",
                            Naziv = "Japan",
                            Sirina = "36.554300448993104",
                            Slika = "zastave/Japan.gif",
                            ValutaId = 14
                        },
                        new
                        {
                            DrzavaId = 18,
                            Duljina = "21.70369910426241",
                            Himna = "himne/Macedonia.mp3",
                            Naziv = "Makedonija",
                            Sirina = "41.63867650987654",
                            Slika = "zastave/Macedonia.gif",
                            ValutaId = 15
                        },
                        new
                        {
                            DrzavaId = 19,
                            Duljina = "-102.76330017415548",
                            Himna = "himne/Mexico.mp3",
                            Naziv = "Meksiko",
                            Sirina = "23.898167246697277",
                            Slika = "zastave/Mexico.gif",
                            ValutaId = 16
                        },
                        new
                        {
                            DrzavaId = 20,
                            Duljina = "172.48203443267067",
                            Himna = "himne/New Zealand.mp3",
                            Naziv = "Novi Zeland",
                            Sirina = "-42.45944241636766",
                            Slika = "zastave/New Zealand.gif",
                            ValutaId = 17
                        },
                        new
                        {
                            DrzavaId = 21,
                            Duljina = "122.85021786638886",
                            Himna = "himne/Philippines.mp3",
                            Naziv = "Filipini",
                            Sirina = "12.522248374750388",
                            Slika = "zastave/Philippines.gif",
                            ValutaId = 18
                        },
                        new
                        {
                            DrzavaId = 22,
                            Duljina = "18.540027025821185",
                            Himna = "himne/Poland.mp3",
                            Naziv = "Poljska",
                            Sirina = "52.89071506172981",
                            Slika = "zastave/Poland.gif",
                            ValutaId = 19
                        },
                        new
                        {
                            DrzavaId = 23,
                            Duljina = "51.19014508916761",
                            Himna = "himne/Qatar.mp3",
                            Naziv = "Katar",
                            Sirina = "25.313258207010662",
                            Slika = "zastave/Qatar.gif",
                            ValutaId = 20
                        },
                        new
                        {
                            DrzavaId = 24,
                            Duljina = "93.42813450212664",
                            Himna = "himne/Russia.mp3",
                            Naziv = "Rusija",
                            Sirina = "62.20846329274161",
                            Slika = "zastave/Russia.gif",
                            ValutaId = 21
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lozinka")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prezime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "87e653bb-19d5-4ca8-a20c-c2e546e176b7",
                            EmailConfirmed = true,
                            Ime = "Administrator",
                            LockoutEnabled = true,
                            Lozinka = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEFYqoZmO5NbtcQUY/cPmKyt4bZdcBfe6H5bv+Uw72FwjH13Fe/gZr8ZT8es7Y1dLCg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Administrator",
                            SecurityStamp = "0ce5eb77-f317-4e88-9321-641f2a28ab87",
                            Slika = "korisnici/admin.jpg",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ea66269-b105-40d0-9433-fbaee51993b5",
                            EmailConfirmed = true,
                            Ime = "Voditelj",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEG75YHlIV23UIn6X9/GH0zgK9v/4zVwE/JaTVYM6EFQ9eEZaBjhaCxJIYu/7gMRdRA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Voditelj",
                            SecurityStamp = "dbcaf770-1625-4eaa-a541-d7e71673c777",
                            Slika = "korisnici/admin.jpg",
                            TwoFactorEnabled = false,
                            UserName = "voditelj"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02a4764a-d4a4-489e-b326-08526ee94bd6",
                            Email = "kdunst@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Kirsten",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAECCv/+4HSfOLnyYm3AeRnJ/SBK+Oh7I3ugMhq6UJbOnJT7Uhv7f2ztfpGwCYWdKenA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Dunst",
                            SecurityStamp = "86d6a0a4-c0ca-4f1c-a97d-ecfd43840733",
                            Slika = "korisnici/kdunst.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kdunst"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b9d3117-73c4-4e06-959d-0fcc421e34aa",
                            Email = "thanks@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Tom",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEPOIbg6fqI0HMQP8PFyqqBPFBp74BpdTsCJBZzkLLbcBXSUglpiAED3VTLJGFxkE7g==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Hanks",
                            SecurityStamp = "58baaf84-9d4f-4fad-bad6-651455e40ff8",
                            Slika = "korisnici/thanks.jpg",
                            TwoFactorEnabled = false,
                            UserName = "thanks"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "495c5f74-019a-48f4-a58f-05a89d1f9807",
                            Email = "jalba@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Jessica",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEAZT8N9+8AwUm08+qs2hwV5BSDgL1q+h3iOgiiosA/5sCh8ILxnSFM3XMYpJja2tYQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Alba",
                            SecurityStamp = "6c70f979-5042-441d-b39f-cd38cc14954d",
                            Slika = "korisnici/jalba.jpg",
                            TwoFactorEnabled = false,
                            UserName = "jalba"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "54f1a475-1bce-426f-b5d6-9453fd94ccb9",
                            Email = "pkos@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Pero",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEL7YP5VYh/rcH9Al8twnPhazzjV8DP7Ct18RaXg2QgkISNvGCbUoRsbVCuXOME4JvQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Kos",
                            SecurityStamp = "6122a61d-3ccf-42dc-928c-1ef33b6e2090",
                            Slika = "korisnici/pkos.jpg",
                            TwoFactorEnabled = false,
                            UserName = "pkos"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8cc8ff5c-4a35-40d0-a093-ff1e35184fdd",
                            Email = "vzec@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Vladimir",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAELgribsdb8UbDzuQvrdblYSyuHCg3QRkqWC22ggDer5lm7/4fDhrX1jvD0veuPbh0Q==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Zec",
                            SecurityStamp = "91a8f871-9545-44a9-a853-c23e2555fe35",
                            Slika = "korisnici/vzec.jpg",
                            TwoFactorEnabled = false,
                            UserName = "vzec"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5ba8c15b-f1f9-40f6-aee9-cb2f9941e4ee",
                            Email = "qtarantino@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Quentin",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEGPBnnqFxEAQqWBCFfb4rX/sbp6wVkHYh8s9264atSBYvUPvNz4ihxYcRSGmmEf1gw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Tarantino",
                            SecurityStamp = "677697ee-c398-479a-9a0a-84db4585ded1",
                            Slika = "korisnici/qtarantino.jpg",
                            TwoFactorEnabled = false,
                            UserName = "qtarantino"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fb3ae024-aa4c-48aa-a535-45de7dacdbd8",
                            Email = "mbellucci@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Monica",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEIgnQHeqzmJ78Le7WruGYCAsTcTzbLyIqs1tV6KBUTb1/XBMTJrvw5Go7KIbiNKINg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Bellucci",
                            SecurityStamp = "3501249a-ab7d-48a3-bcc3-d107b3d21b6f",
                            Slika = "korisnici/mbellucci.jpg",
                            TwoFactorEnabled = false,
                            UserName = "mbellucci"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34505f9b-7f20-48d6-8510-a2809822b9b7",
                            Email = "vmortensen@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Viggo",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEHzALX70mWtG3YvJ+I/XF1sm4NpWR9ajvBMYHYK9ZB1lzfoqZsob5AkmredECx/efw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Mortensen",
                            SecurityStamp = "6cf9d37b-4323-49bc-a297-4cf92d59ff27",
                            Slika = "korisnici/vmortensen.jpg",
                            TwoFactorEnabled = false,
                            UserName = "vmortensen"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "175f682a-0790-460c-8419-a86326336f9e",
                            Email = "jgarner@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Jennifer",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAELCTtIWjNHAZxK2AMOMN/YoHt+E5mBZUiIv2nof/BFWDYk7dhJXjIlwRFQfLlFRymQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Garner",
                            SecurityStamp = "98865952-2844-491a-b25b-ae83f0696c4b",
                            Slika = "korisnici/jgarner.jpg",
                            TwoFactorEnabled = false,
                            UserName = "jgarner"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c88b4ecc-16a9-4488-80aa-7ec18f5f1b0a",
                            Email = "nportman@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Natalie",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEPbkzMn1cP/3jVaHrTr5jX3Ax9j66bHTA8qi3fVzDmBjy+yNk/mhdZ6RUaNI+OGTAA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Portman",
                            SecurityStamp = "4334326c-9ebb-4bd2-83ba-dcb7d51d7f1d",
                            Slika = "korisnici/nportman.jpg",
                            TwoFactorEnabled = false,
                            UserName = "nportman"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d8d73c81-366c-46c5-bdbe-01531b511b4b",
                            Email = "dradcliffe@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Daniel",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAECKhWui0T4TsX5u1JOiWUUJDKoX/eratRmtWQG+co33Y4Kh9MhCYsJhGSCMTCNb3NQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Radcliffe",
                            SecurityStamp = "0e8c7a7e-484b-45aa-aba8-f7e6e152db90",
                            Slika = "korisnici/dradcliffe.jpg",
                            TwoFactorEnabled = false,
                            UserName = "dradcliffe"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2de878da-819b-4c57-ad0a-d0dc02bbd7e9",
                            Email = "hberry@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Halle",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEIwY2kFuUXsi0oZpawo35DrBajrHezuYhiH0CSVeUAp4rDRmONZSdcf4H/d1CX8BIg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Berry",
                            SecurityStamp = "3b401eb5-33f4-41d5-91cd-64a6c44ebdc9",
                            Slika = "korisnici/hberry.jpg",
                            TwoFactorEnabled = false,
                            UserName = "hberry"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "deacc1fe-f86a-4228-9018-8e0cb544728b",
                            Email = "vdiesel@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Vin",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEETwMFlomY0mHIcnHQBswylv/BZoECOsCGPLHeepLa2h8txT2YYQcfs/aBIA6W7XpQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Diesel",
                            SecurityStamp = "ec889ef5-73c8-49fe-984e-52e9da2ef8e9",
                            Slika = "korisnici/vdiesel.jpg",
                            TwoFactorEnabled = false,
                            UserName = "vdiesel"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aaa8805f-58b5-4031-b34f-1e630b4c741f",
                            Email = "ecuthbert@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Elisha",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAED2cUCVUMkT7+ro+SL3r07h/UHwqmvwkRlGxQfQ8Y/TjWpx/lYdIoDjUwAOc2ETtWw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Cuthbert",
                            SecurityStamp = "725f193a-14b5-497b-b925-0f4aa34b6496",
                            Slika = "korisnici/ecuthbert.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ecuthbert"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa53e7a7-ee49-487c-aca2-4fe2bf4dc563",
                            Email = "janiston@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Jennifer",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEHcaHaxPuGA9CIq98pPTnMNWbRIUm2cwMFR8iueR0tovz5rhwipYoo+1QHbmUkzcFQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Aniston",
                            SecurityStamp = "9af0be00-4730-4033-b951-1e2025b70d9c",
                            Slika = "korisnici/janiston.jpg",
                            TwoFactorEnabled = false,
                            UserName = "janiston"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "43565ea1-7f76-4909-a2bb-87c13f9d2b11",
                            Email = "ctheron@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Charlize",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEI8nrei+CHZmcg1BkPGMvw7H76vvs0gbHBSAoU5LKxeFdl/CL/dbOUGK7bdevXVRaw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Theron",
                            SecurityStamp = "90a5c33b-302d-491f-8a90-e2f8a5727f24",
                            Slika = "korisnici/ctheron.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ctheron"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2e014083-fe86-457e-99f2-4d5312ddb284",
                            Email = "nkidman@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Nicole",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEAixKjwaW9Fy0EObGrWsDIs3xgxaId4ZtHdudsLJsKNsZqbkuKnuw2hMa3sHvajSxQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Kidman",
                            SecurityStamp = "6e08f369-eba0-4eb6-8421-ab889f26ffa6",
                            Slika = "korisnici/nkidman.jpg",
                            TwoFactorEnabled = false,
                            UserName = "nkidman"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f471d1bd-223e-4d19-bb77-e2d7085fb25a",
                            Email = "ewatson@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Emma",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEDvhlFR9CY/Fo+Xgl94Gxfaxc6Pnsvs38bxoMKZ+fGWSRPx1iHV6AjWKUZD5WGnVDg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Watson",
                            SecurityStamp = "29f08bc2-16ef-4987-b10b-fe9dff0f4eb9",
                            Slika = "korisnici/ewatson.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ewatson"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7b5bdf09-30d8-4044-bbd6-eea62f291d83",
                            Email = "sjohansson@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Scarlett",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEDiUbghOlv/BymgRJFJirAxsidbn3h9MWTTKEVtvNSdWIM4rQfhcRjKJsc82J9JaLA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Johansson",
                            SecurityStamp = "e9ec699a-df58-471d-ba72-350e3b92a4fa",
                            Slika = "korisnici/sjohansson.jpg",
                            TwoFactorEnabled = false,
                            UserName = "sjohansson"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c38370c2-5807-4fc8-bf73-92d91248aea9",
                            Email = "philton@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Paris",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ/qEiwwvV/xuZqEXMU+kUrXM9Zk2hdyXky4TdhkZi6ayWfuA4bkVNvM5X6ZL39ryg==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Hilton",
                            SecurityStamp = "164a6947-1f04-4751-b780-cc0badf3f72a",
                            Slika = "korisnici/philton.jpg",
                            TwoFactorEnabled = false,
                            UserName = "philton"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "90f84ef1-1049-43d2-a966-b591ade672f0",
                            Email = "kbeckinsale@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Kate",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAED3mKZACqzV9uNkfNxIh/AB165J3vIT4wWgElR3nM7V8ptSNQ8XwbU5BAheGcljnyw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Beckinsale",
                            SecurityStamp = "a8b822c5-42a3-449a-a670-e7bcf252031a",
                            Slika = "korisnici/kbeckinsale.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kbeckinsale"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "54ec89f7-7f3a-4fff-a4f8-43a502d308a5",
                            Email = "tcruise@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Tom",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEH4j4wAMMT07A3W1mvaJQR3Xn8yXm4w9KOeFy77o6utHZ63of/HAGHjHlQRBdgOVzw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Cruise",
                            SecurityStamp = "fecd3432-0961-40d6-b7b6-909e56fa99c3",
                            Slika = "korisnici/tcruise.jpg",
                            TwoFactorEnabled = false,
                            UserName = "tcruise"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c1c743bd-79c6-4756-9c21-9b87ee3064cf",
                            Email = "hduff@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Hilary",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAENygVIBhiHidej9TrJJ7yhlwzUeGDDyv2Twqaqxwv/oSgMbtlQ8Qna9cQ/oO7H8MkA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Duff",
                            SecurityStamp = "dc8683b8-b67c-440d-86b8-54bea497e560",
                            Slika = "korisnici/hduff.jpg",
                            TwoFactorEnabled = false,
                            UserName = "hduff"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c99facb6-5b15-47ff-a3aa-50f4fc9536b6",
                            Email = "ajolie@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Angelina",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEBPJWMJG6CG9EM98zO9t8OsA7skikaEqcnMxSGJdrfiLD2EdCW46LVtwDyTzvl35Kw==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Jolie",
                            SecurityStamp = "42d33393-e9ff-4b6c-99da-ab37c81d10ea",
                            Slika = "korisnici/ajolie.jpg",
                            TwoFactorEnabled = false,
                            UserName = "ajolie"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2d38af05-aed8-4ceb-b13a-0e489e9242df",
                            Email = "kknightley@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Keira",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEOA+2PEKspeqNM5kHhwj0Hujui5TBsTD1yr9fUhG8BYpWJI6jNwFayIuyzQxUaAxXA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Knightley",
                            SecurityStamp = "b6169ed2-48a8-492f-870f-9f4535815669",
                            Slika = "korisnici/kknightley.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kknightley"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ea252c01-9986-4f23-86ab-15ae72b6bf6e",
                            Email = "obloom@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Orlando",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAENcqYGNlGHxOVepOSLBpojBpH0RALC6gfkfNXZGCW0gDigTcoEQYTb6iols92zCIKA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Bloom",
                            SecurityStamp = "d42bb2e1-dbdd-404a-bd8e-76bb9c78353d",
                            Slika = "korisnici/obloom.jpg",
                            TwoFactorEnabled = false,
                            UserName = "obloom"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4f6c5940-3b2c-4afb-a0d3-9a5d00b29c3c",
                            Email = "llohan@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Lindsay",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEOs0u31YaUPqA80OosY6UKkHdtiXPZsU64NoPTeHbd93s6rAH6d1bW3RoNSiFZn+iQ==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Lohan",
                            SecurityStamp = "91a51d19-1119-4523-b717-9ca3422a90f4",
                            Slika = "korisnici/llohan.jpg",
                            TwoFactorEnabled = false,
                            UserName = "llohan"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4686153b-1bd2-48f5-a93e-1b6d7d040aac",
                            Email = "jdepp@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Johnny",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEGdt8uZ1I5AVEWE2MSqEaZB2AikSObhapEZT/B5HLQZ3UT6+iFbxBsx/tthNoa8+UA==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Depp",
                            SecurityStamp = "cf823e5e-8bbc-42ef-bd64-76c29e47f9bd",
                            Slika = "korisnici/jdepp.jpg",
                            TwoFactorEnabled = false,
                            UserName = "jdepp"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "61088db5-9c78-437b-ad40-53db9bec8de2",
                            Email = "kreeves@mail.hr",
                            EmailConfirmed = true,
                            Ime = "Keanu",
                            LockoutEnabled = true,
                            Lozinka = "123456",
                            PasswordHash = "AQAAAAEAACcQAAAAEMfjNcIa8VUQ5Qw/MyH0LY8oRNFFz8KXxYrSEnLWo3gtKtRUi6OAZAB7IrbIgojz/A==",
                            PhoneNumberConfirmed = false,
                            Prezime = "Reeves",
                            SecurityStamp = "098042cb-5f7c-48a4-b709-864cf7ae25f0",
                            Slika = "korisnici/kreeves.jpg",
                            TwoFactorEnabled = false,
                            UserName = "kreeves"
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "a6c132a5-7645-4352-bd32-24faf13fdc33",
                            Name = "administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "dc9e2d38-cdbf-4cf8-aa75-192f96879d43",
                            Name = "moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "5a176c77-e947-4087-b2ce-092a67e815f2",
                            Name = "korisnik",
                            NormalizedName = "KORISNIK"
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Sredstva", b =>
                {
                    b.Property<int>("SredstvaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Iznos")
                        .HasColumnType("REAL");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValutaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SredstvaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Sredstva");

                    b.HasData(
                        new
                        {
                            SredstvaId = 1,
                            Iznos = 100.0,
                            KorisnikId = 1,
                            ValutaId = 1
                        },
                        new
                        {
                            SredstvaId = 2,
                            Iznos = 150.0,
                            KorisnikId = 1,
                            ValutaId = 5
                        },
                        new
                        {
                            SredstvaId = 3,
                            Iznos = 1000.0,
                            KorisnikId = 1,
                            ValutaId = 8
                        },
                        new
                        {
                            SredstvaId = 4,
                            Iznos = 175.0,
                            KorisnikId = 5,
                            ValutaId = 7
                        },
                        new
                        {
                            SredstvaId = 5,
                            Iznos = 10000.0,
                            KorisnikId = 2,
                            ValutaId = 10
                        },
                        new
                        {
                            SredstvaId = 6,
                            Iznos = 1000000.0,
                            KorisnikId = 11,
                            ValutaId = 6
                        },
                        new
                        {
                            SredstvaId = 7,
                            Iznos = 12345678.0,
                            KorisnikId = 3,
                            ValutaId = 4
                        },
                        new
                        {
                            SredstvaId = 8,
                            Iznos = 80000.0,
                            KorisnikId = 13,
                            ValutaId = 8
                        },
                        new
                        {
                            SredstvaId = 9,
                            Iznos = 100000.0,
                            KorisnikId = 19,
                            ValutaId = 2
                        },
                        new
                        {
                            SredstvaId = 10,
                            Iznos = 100.0,
                            KorisnikId = 11,
                            ValutaId = 7
                        },
                        new
                        {
                            SredstvaId = 11,
                            Iznos = 100.0,
                            KorisnikId = 5,
                            ValutaId = 11
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Valuta", b =>
                {
                    b.Property<int>("ValutaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("AktivnoDo")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("AktivnoOd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumAzuriranja")
                        .HasColumnType("TEXT");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naziv")
                        .HasColumnType("TEXT");

                    b.Property<string>("SlikaValute")
                        .HasColumnType("TEXT");

                    b.Property<double>("Tecaj")
                        .HasColumnType("REAL");

                    b.HasKey("ValutaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Valute");

                    b.HasData(
                        new
                        {
                            ValutaId = 1,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "HRK",
                            SlikaValute = "valute/",
                            Tecaj = 1.0
                        },
                        new
                        {
                            ValutaId = 2,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "USD",
                            SlikaValute = "valute/dolar.jpg",
                            Tecaj = 0.15809999999999999
                        },
                        new
                        {
                            ValutaId = 3,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "AUD",
                            SlikaValute = "valute/australskidolar.jpg",
                            Tecaj = 0.20660000000000001
                        },
                        new
                        {
                            ValutaId = 4,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "BAM",
                            SlikaValute = "valute/bam.gif",
                            Tecaj = 0.2596
                        },
                        new
                        {
                            ValutaId = 5,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "CAD",
                            SlikaValute = "valute/cad.jpg",
                            Tecaj = 0.19869999999999999
                        },
                        new
                        {
                            ValutaId = 6,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "CNY",
                            SlikaValute = "valute/cny.jpg",
                            Tecaj = 1.0338000000000001
                        },
                        new
                        {
                            ValutaId = 7,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "DKK",
                            SlikaValute = "valute/dkk.jpg",
                            Tecaj = 0.99019999999999997
                        },
                        new
                        {
                            ValutaId = 8,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            Naziv = "EUR",
                            SlikaValute = "valute/EUR.jpg",
                            Tecaj = 0.13270000000000001
                        },
                        new
                        {
                            ValutaId = 9,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "HUF",
                            SlikaValute = "valute/huf.jpg",
                            Tecaj = 47.744599999999998
                        },
                        new
                        {
                            ValutaId = 10,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "ISK",
                            SlikaValute = "valute/isk.jpg",
                            Tecaj = 20.005800000000001
                        },
                        new
                        {
                            ValutaId = 11,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "INR",
                            SlikaValute = "valute/inr.jpg",
                            Tecaj = 11.758599999999999
                        },
                        new
                        {
                            ValutaId = 12,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "IRR",
                            SlikaValute = "valute/irr.jpg",
                            Tecaj = 6602.1956
                        },
                        new
                        {
                            ValutaId = 13,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "ILS",
                            SlikaValute = "valute/ils.jpg",
                            Tecaj = 0.52090000000000003
                        },
                        new
                        {
                            ValutaId = 14,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "JPY",
                            SlikaValute = "valute/jpy.jpg",
                            Tecaj = 17.270399999999999
                        },
                        new
                        {
                            ValutaId = 15,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            Naziv = "MKD",
                            SlikaValute = "valute/mkd.jpg",
                            Tecaj = 8.1780000000000008
                        },
                        new
                        {
                            ValutaId = 16,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "MXN",
                            SlikaValute = "valute/mxn.jpg",
                            Tecaj = 3.1829000000000001
                        },
                        new
                        {
                            ValutaId = 17,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "NZD",
                            SlikaValute = "valute/nzd.jpg",
                            Tecaj = 0.22409999999999999
                        },
                        new
                        {
                            ValutaId = 18,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "PHP",
                            SlikaValute = "valute/php.jpg",
                            Tecaj = 7.6715999999999998
                        },
                        new
                        {
                            ValutaId = 19,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "PLN",
                            SlikaValute = "valute/pln.jpg",
                            Tecaj = 0.60489999999999999
                        },
                        new
                        {
                            ValutaId = 20,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "QAR",
                            SlikaValute = "valute/qar.jpg",
                            Tecaj = 0.57550000000000001
                        },
                        new
                        {
                            ValutaId = 21,
                            AktivnoDo = new TimeSpan(0, 12, 0, 0, 0),
                            AktivnoOd = new TimeSpan(0, 10, 0, 0, 0),
                            DatumAzuriranja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            Naziv = "RUB",
                            SlikaValute = "valute/rub.jpg",
                            Tecaj = 12.1433
                        });
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Zahtjev", b =>
                {
                    b.Property<int>("ZahtjevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatumVrijemeKreiranja")
                        .HasColumnType("TEXT");

                    b.Property<double>("Iznos")
                        .HasColumnType("REAL");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KupujemValutaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Prihvacen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdajemValutaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ValutaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ZahtjevId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Zahtjevi");

                    b.HasData(
                        new
                        {
                            ZahtjevId = 1,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 16, 13, 19, 1, 661, DateTimeKind.Local).AddTicks(6839),
                            Iznos = 100.0,
                            KorisnikId = 6,
                            KupujemValutaId = 1,
                            Prihvacen = 2,
                            ProdajemValutaId = 8
                        },
                        new
                        {
                            ZahtjevId = 2,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 16, 13, 19, 1, 666, DateTimeKind.Local).AddTicks(6416),
                            Iznos = 4500.0,
                            KorisnikId = 8,
                            KupujemValutaId = 8,
                            Prihvacen = 2,
                            ProdajemValutaId = 1
                        },
                        new
                        {
                            ZahtjevId = 3,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 16, 13, 19, 1, 666, DateTimeKind.Local).AddTicks(6481),
                            Iznos = 1500.0,
                            KorisnikId = 7,
                            KupujemValutaId = 11,
                            Prihvacen = 2,
                            ProdajemValutaId = 4
                        },
                        new
                        {
                            ZahtjevId = 4,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 16, 13, 19, 1, 666, DateTimeKind.Local).AddTicks(6487),
                            Iznos = 10000.0,
                            KorisnikId = 10,
                            KupujemValutaId = 7,
                            Prihvacen = 2,
                            ProdajemValutaId = 2
                        },
                        new
                        {
                            ZahtjevId = 5,
                            DatumVrijemeKreiranja = new DateTime(2021, 4, 16, 13, 19, 1, 666, DateTimeKind.Local).AddTicks(6492),
                            Iznos = 1800.0,
                            KorisnikId = 4,
                            KupujemValutaId = 9,
                            Prihvacen = 1,
                            ProdajemValutaId = 8
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Drzava", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Valuta", "Valuta")
                        .WithMany("Drzave")
                        .HasForeignKey("ValutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Sredstva", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("Sredstva")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExchangeValuta.Domain.Models.Valuta", "Valuta")
                        .WithMany("Sredstva")
                        .HasForeignKey("ValutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.UserRole", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Valuta", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("Valute")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExchangeValuta.Domain.Models.Zahtjev", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", "Korisnik")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExchangeValuta.Domain.Models.Valuta", "Valuta")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("ValutaId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ExchangeValuta.Domain.Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
